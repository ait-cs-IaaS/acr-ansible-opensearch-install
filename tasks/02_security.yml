---
#
# Wolfgang Hotwagner updated this file on 19. April 2024
#

## Here we are going to use self-signed certificates for Transport (Node-Node communication) & REST API layer
## Using searchguard offline TLS tool to create node & root certificates

- name: Security Plugin configuration | Copy the security configuration file 1 to cluster
  ansible.builtin.blockinfile:
    block: "{{ os_security_conf | to_nice_yaml }}"
    dest: "{{ os_conf_dir }}/opensearch.yml"
    backup: true
    insertafter: EOF
    marker: "## {mark} OpenSearch Security common configuration ##"

# --------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------

- name: Check if the folder exists
  become: false
  local_action:
    module: ansible.builtin.stat
    path: "{{ os_local_certs_path }}"
  register: folder_status

- block:
    - name: Security Plugin configuration | Create local temporary directory for certificates generation
      become: false
      local_action:
        module: ansible.builtin.file
        path: "{{ item }}"
        state: directory
        recurse: true
      run_once: true
      with_items:
        - /tmp/opensearch_tmp
        - "{{ os_local_certs_path }}"

    - name: Security Plugin configuration | Download certificates generation tool
      become: false
      local_action:
        module: ansible.builtin.unarchive
        src: https://search.maven.org/remotecontent?filepath=com/floragunn/search-guard-tlstool/1.5/search-guard-tlstool-1.5.tar.gz
        dest: "/tmp/opensearch_tmp/"
        remote_src: true
      run_once: true

    - name: Security Plugin configuration | Make the executable file
      become: false
      local_action:
        module: ansible.builtin.file
        dest: "/tmp/opensearch_tmp/tools/sgtlstool.sh"
        mode: a+x
      run_once: true

    - name: Security Plugin configuration | Prepare the certificates generation template file
      become: false
      local_action:
        module: ansible.builtin.template
        src: tlsconfig.yml.j2
        dest: "{{ os_local_certs_path }}/tlsconfig.yml"
      run_once: true

    - name: Security Plugin configuration | Generate the node & admin certificates on localhost
      become: false
      local_action:
        module: ansible.builtin.command 
        cmd: "/tmp/opensearch_tmp/tools/sgtlstool.sh -c {{ os_local_certs_path }}/tlsconfig.yml -ca -crt -t {{ os_local_certs_path }}"
      run_once: true

  when: not folder_status.stat.exists

# --------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------

- name: Security Plugin configuration | Copy certificates to opensearch nodes
  ansible.builtin.copy:
    src: "{{ os_local_certs_path }}/{{ item }}"
    dest: "{{ os_conf_dir }}/{{ item }}"
    mode: 0600
  with_items:
    - root-ca.pem
    - root-ca.key
    - "{{ opensearch_hostname }}.key"
    - "{{ opensearch_hostname }}.pem"
    - "{{ opensearch_hostname }}_http.key"
    - "{{ opensearch_hostname }}_http.pem"
    - admin.key
    - admin.pem

- name: Security Plugin configuration | Copy the security configuration
  ansible.builtin.blockinfile:
    block: "{{ lookup('file', os_local_certs_path + '/' + opensearch_hostname + '_elasticsearch_config_snippet.yml') }}"
    dest: "{{ os_conf_dir }}/opensearch.yml"
    backup: true
    insertafter: EOF
    marker: "## {mark} opensearch Security Node & Admin certificates configuration ##"
    
- name: Security Plugin configuration | Create security plugin configuration folder
  ansible.builtin.file:
    dest: "{{ os_sec_plugin_conf_path }}"
    owner: "{{ os_user }}"
    group: "{{ os_user }}"
    mode: 0700
    state: directory

- name: Security Plugin configuration | Copy the security configuration file 3 to cluster
  ansible.builtin.template:
    src: security_plugin_conf.yml.j2
    dest: "{{ os_sec_plugin_conf_path }}/config.yml"
    backup: true
    owner: "{{ os_user }}"
    group: "{{ os_user }}"
    mode: 0600
    force: true
  when: copy_custom_security_configs

- name: Security Plugin configuration | Prepare the opensearch security configuration file
  ansible.builtin.replace:
    path: "{{ os_conf_dir }}/opensearch.yml"
    regexp: 'searchguard'
    replace: 'plugins.security'

- name: Security Plugin configuration | Set the file ownerships
  ansible.builtin.file:
    dest: "{{ os_home }}"
    owner: "{{ os_user }}"
    group: "{{ os_user }}"
    recurse: true

- name: Security Plugin configuration | Set the folder permission
  ansible.builtin.file:
    dest: "{{ os_conf_dir }}"
    owner: "{{ os_user }}"
    group: "{{ os_user }}"
    mode: 0700

- name: Security Plugin configuration | Restart opensearch with security configuration
  ansible.builtin.systemd:
    name: opensearch
    state: restarted
    enabled: true

- name: Wait for opensearch to startup
  ansible.builtin.wait_for:
    host: "{{ os_host_ip }}"
    port: "{{ os_api_port }}"
    delay: 5
    connect_timeout: 1
    timeout: 120

- name: Security Plugin configuration | Copy custom configuration files to cluster
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ os_sec_plugin_conf_path }}/"
    owner: "{{ os_user }}"
    group: "{{ os_user }}"
    backup: true
    mode: 0640
    force: true
  with_items: "{{ custom_security_plugin_configs }}"
  when: copy_custom_security_configs

- name: Security Plugin configuration | Copy the opensearch security internal users template
  ansible.builtin.template:
    src: "{{ os_internal_users_template }}"
    dest: "{{ os_sec_plugin_conf_path }}/internal_users.yml"
    mode: 0644
  run_once: true

- name: Security Plugin configuration | Initialize the opensearch security index in opensearch with CUSTOM configs
  ansible.builtin.shell: >
    bash {{ os_sec_plugin_tools_path }}/securityadmin.sh
    -cacert {{ os_conf_dir }}/root-ca.pem
    -cert {{ os_conf_dir }}/admin.pem
    -key {{ os_conf_dir }}/admin.key
    -cd {{ os_sec_plugin_conf_path }}
    -nhnv -icl
    -h {{ os_host_ip }}
  environment:
    JAVA_HOME: "{{ os_home }}/jdk/"
  run_once: true
  register: secadmin_output
  failed_when: '"Exception" in secadmin_output.stdout'
  when: copy_custom_security_configs

- name: Security Plugin configuration | Initialize the opensearch security index in opensearch with DEFAULT configs
  ansible.builtin.shell: >
    bash {{ os_sec_plugin_tools_path }}/securityadmin.sh
    -cacert {{ os_conf_dir }}/root-ca.pem
    -cert {{ os_conf_dir }}/admin.pem
    -key {{ os_conf_dir }}/admin.key
    -f {{ os_sec_plugin_conf_path }}/internal_users.yml
    -nhnv -icl
    -h {{ os_host_ip }}
  environment:
    JAVA_HOME: "{{ os_home }}/jdk/"
  run_once: true
  register: secadmin_output
  failed_when: '"Exception" in secadmin_output.stdout'
  when: not copy_custom_security_configs
